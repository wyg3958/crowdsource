.error {
    input,
    textarea,
    select {
        // foundation sets this to 0, this causes the fields after the one with the error to "bounce" because the margin changes
        // -> overwrite it back to default setting
        margin-bottom: $form-spacing;
    }
}

// Angular JS defined class
.invalid-label {
  color: #f04124 !important;
}



// ---
// Extends Foundation's global buttons styles
// ---


// Mixins

@mixin box-shadow($options:()) {
  $options: map-merge((
    x:      0,
    y:      2px,
    blur:   0,
    spread: 0,
    color:  rgba(0,0,0,0.25)
  ), $options);

  box-shadow:
    map-get($options, x)
    map-get($options, y)
    map-get($options, blur)
    map-get($options, spread)
    map-get($options, color);
}


// Extends

%btn-crwd {
  background-color: $clr-blue-shade-3;
  &:hover { background-color: $clr-blue-shade-2; }
}


%btn-crwd-success {
    color: $clr-body;
    background-color: $clr-green-shade-2;
    &:hover { background-color: #35EA87; color: $clr-body; }
}


%btn-dark {
  font-weight: 200;
  letter-spacing: 0.25px;
  background-color: #3C3C3C;
  &:hover { background-color: darken(#3C3C3C, 10%); }
}


// Extend Foundation's Button

button, .button {

    padding: rem-calc(12px) rem-calc(32px);
    font-size: rem-calc(14px);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  // Change Foundation's default transition, mixin in foundation/global.scss
  @include single-transition(background-color, 100ms);

  // Add a box-shadow
  &.shadow {
    @include box-shadow;
  }

  // Our default button
  &.crwd {
    @extend %btn-crwd;
  }

  // Our own success button
  &.crwd-success {
    @extend %btn-crwd-success;
  }

  // Dark button
  &.dark {
    @extend %btn-dark;
  }

  &:focus {
      outline: 0;
  }
}


.form-horizontal {
    button {
        margin-top: 21px;
        padding: 9px 20px;
        font-size: $fs-small;
    }
}
